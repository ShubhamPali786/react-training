{"version":3,"sources":["context.ts","components/Container.tsx","components/Column.tsx","store/actions/cart.actions.ts","components/Row.tsx","components/ImageWithFallback.tsx","store/actions/currency.actions.ts","components/Currency.tsx","components/ThemeSwitch.tsx","Demo.tsx","components/ErrorPage.tsx","containers/Checkout.tsx","components/PrivateRoute.tsx","components/CartItem.tsx","containers/Cart.tsx","store/actions/user.actions.ts","components/LoadingSpinner.tsx","HOC/LoaderHOC.jsx","containers/Login.tsx","AppRouter.tsx","components/Menu.tsx","containers/Header.tsx","components/Footer.tsx","components/CartIcon.tsx","App.tsx","serviceWorker.ts","store/reducers/currency.reducer.ts","store/reducers/cart.reducer.ts","store/reducers/user.reducer.ts","store/actions/common.actions.ts","store/reducers/common.reducer.ts","store/reducers/index.ts","store/sagas/auth-saga.ts","store/sagas/index.ts","store/index.ts","index.tsx"],"names":["ThemeContext","React","createContext","Container","fullWidth","children","cls","className","Column","props","size","colSize","color","useContext","defaultProps","cartActionTypes","ADD_TO_CART","REMOVE_FROM_CART","cartActions","addToCart","product","type","removeItem","id","Row","ImageWithFallback","useState","source","imgSrc","updateImage","src","onError","alt","style","height","width","currencyTypes","currencyActions","code","Currency","onChange","event","currencyChange","currentTarget","value","map","c","key","Component","connect","dispatch","ThemeSwitch","theme","updateTheme","useEffect","console","log","document","body","cursor","onClick","t","changeTheme","Demo","state","no","a","userName","nextProps","nextState","this","history","push","setState","prevState","ErrorPage","href","Checkout","name","emailRef","createRef","preventDefault","current","onSubmit","submitData","ref","isAuthenticated","userSession","user","component","rest","LoadComponent","render","location","to","pathname","CartItem","item","remove","productQty","qty","updateQty","productImage","productName","Number","productPrice","toFixed","min","e","q","valueAsNumber","title","Cart","renderTableHeader","renderTableBody","renderTableFooter","cartItems","productId","currencyCode","v","i","colSpan","sumBy","length","renderTable","renderEmptyCart","currency","cart","userActionTypes","userActions","email","password","error","isLoading","loading","role","withLoader","WrappedComponent","WithLoadingScreen","Fragment","hoistNonReactStatics","Login","login","isLoggedIn","param","search","lastPage","qs","parse","doLogin","compose","LazyProductList","lazy","AppRouter","Suspense","fallback","path","exact","Menu","menuList","menuLabel","menuLink","activeClassName","Header","getMenuData","Axios","get","then","res","data","catch","err","context","transform","data-toggle","data-target","aria-controls","aria-expanded","aria-label","contextType","Footer","Date","getFullYear","count","data-count","App","darkMode","Provider","Boolean","window","hostname","match","currencyReducer","action","cartReduer","filter","p","initialState","userReducer","commonActionTypes","commonActions","status","commonReducer","rootReducer","combineReducers","authSaga","watchAuth","url","returnSecureToken","put","post","response","message","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","middlewares","appStore","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","StrictMode","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70d75ec1.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const ThemeContext = React.createContext<boolean>(false);\n","import React from \"react\";\ninterface ContainerProps {\n  fullWidth?: boolean;\n}\n\nconst Container: React.FC<ContainerProps> = ({ fullWidth, children }) => {\n  const cls = fullWidth ? \"container-fluid mb-5\" : \"container mb-5\";\n  return <div className={cls}>{children}</div>;\n};\n\nexport default Container;\n","import React from \"react\";\nimport { ThemeContext } from \"../context\";\n\ninterface ColumnProps {\n  colSize?: number;\n}\n\nconst Column: React.FC<ColumnProps> = (props) => {\n  const size = props.colSize ? 12 / props.colSize : 12;\n  const cls = `col-md-${size}`;\n  const theme = React.useContext(ThemeContext);\n  let color = theme ? \"text-white\" : \"\";\n  color += ` ${cls}`;\n  return <div className={color}>{props.children}</div>;\n};\n\nColumn.defaultProps = {\n  colSize: 1,\n};\nexport default Column;\n","import { ProductModel } from \"../../models/product.model\";\n\nexport const cartActionTypes = {\n  ADD_TO_CART: \"[Cart] Add to Cart\",\n  REMOVE_FROM_CART: \"[Cart] Remove Item\",\n};\n\nconst addToCart = (product: ProductModel) => {\n  return { type: cartActionTypes.ADD_TO_CART, product };\n};\n\nconst removeItem = (id: number) => {\n  return { type: cartActionTypes.REMOVE_FROM_CART, id };\n};\n\nexport const cartActions = { addToCart, removeItem };\n","import React from \"react\";\n\nconst Row: React.FC = (props) => {\n  return <div className=\"row\">{props.children}</div>;\n};\n\nexport default Row;\n","import React from \"react\";\n\ninterface ImageWithFallbackProps {\n  source: string;\n  size?: number;\n}\n\nconst ImageWithFallback: React.FC<ImageWithFallbackProps> = (props) => {\n  // let [state,setState]=React.useState(default value);\n  let [imgSrc, updateImage] = React.useState(props.source);\n  return (\n    <img\n      src={imgSrc}\n      onError={() =>\n        updateImage(\"https://img.icons8.com/carbon-copy/2x/no-image.png\")\n      }\n      alt={\"some text\"}\n      className=\"img-thumbnail\"\n      style={{ height: `${props.size}px`, width: `${props.size}px` }}\n    />\n  );\n};\nexport default ImageWithFallback;\nImageWithFallback.defaultProps = { size: 200 };\n// product.jpg : fails : default.jpg\n","export const currencyTypes = {\n  CHANGE_CURRENCY: \"[Currency] Change Currency\",\n};\n\n// ACTION\nconst changeCurrency = (code: string) => {\n  return {\n    type: currencyTypes.CHANGE_CURRENCY, // required\n    code, // optional\n  };\n};\n\nexport const currencyActions = { changeCurrency };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { currencyActions } from \"../store/actions/currency.actions\";\n\ninterface CurrencyProps {\n  currencyChange: (code: string) => void;\n}\n\nclass Currency extends React.Component<CurrencyProps> {\n  render() {\n    const codes = [\"INR\", \"USD\", \"EUR\", \"GBP\", \"CAD\"];\n    return (\n      <select\n        className=\"form-control\"\n        onChange={(event) =>\n          this.props.currencyChange(event.currentTarget.value)\n        }\n      >\n        {codes.map((c) => (\n          <option key={c}>{c}</option>\n        ))}\n      </select>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    currencyChange: (code: string) =>\n      dispatch(currencyActions.changeCurrency(code)),\n  };\n};\n// connect(what to fetch, what to modify)(component)\nexport default connect(null, mapDispatchToProps)(Currency);\n","import React from \"react\";\n\ninterface ThemeSwitchProps {\n  changeTheme: (theme: boolean) => void;\n}\n\nconst ThemeSwitch: React.FC<ThemeSwitchProps> = (props) => {\n  let [theme, updateTheme] = React.useState(false);\n\n  // lifecycle\n  React.useEffect(() => {\n    console.log(\"hook called\");\n    const color = theme ? \"bg-dark\" : \"\";\n    document.body.className = color;\n  });\n\n  return (\n    <div\n      className=\"mx-2\"\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        const t = !theme;\n        updateTheme(t); // set state\n        // send data to app\n        props.changeTheme(t);\n      }}\n    >\n      {!theme ? (\n        <i className=\"fas fa-moon fa-2x text-secondary\"></i>\n      ) : (\n        <i className=\"fas fa-sun fa-2x text-warning\"></i>\n      )}\n    </div>\n  );\n};\nexport default ThemeSwitch;\n\n// mounting, updating, unmounting\n","import React from \"react\";\nimport { RouteChildrenProps } from \"react-router-dom\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row\";\nimport Column from \"./components/Column\";\ninterface DemoState {\n  no: number;\n  a: number;\n}\ninterface DemoProps extends RouteChildrenProps {}\n//  Fragments\nclass Demo extends React.Component<DemoProps, DemoState> {\n  state: DemoState = { no: 1, a: 1 };\n\n  shouldComponentUpdate(nextProps: any, nextState: DemoState) {\n    console.log(\"component update called\", nextProps, nextState);\n    return nextState.a === 5 || nextState.no !== this.state.no;\n  }\n\n  userName = \"Demo\";\n  render() {\n    console.log(\"render called\", this.state);\n    let name = \"Mike\";\n    return (\n      <Container>\n        <Row>\n          <Column>\n            <h1>Demo Component</h1>\n            <p>this is component demo</p>\n            <p>Hello from {name}</p>\n            <p>{this.userName}</p>\n            <p>{9 + 7}</p>\n            <button\n              onClick={() => this.props.history.push(\"/products\")}\n              className=\"btn btn-light mr-2\"\n            >\n              Go To Products\n            </button>\n            <button\n              onClick={() => this.setState({ no: 0 })}\n              className=\"btn btn-light mr-2\"\n            >\n              change to 0\n            </button>\n            <button\n              onClick={() => this.setState({ no: 1 })}\n              className=\"btn btn-light mr-2\"\n            >\n              change to 1\n            </button>\n            <button\n              className=\"btn btn-light mr-2\"\n              onClick={() =>\n                this.setState((prevState: DemoState) => ({\n                  a: prevState.a + 1,\n                }))\n              }\n            >\n              change a by 1\n            </button>\n          </Column>\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default Demo;\n","import React from \"react\";\nimport Column from \"./Column\";\nimport Row from \"./Row\";\nimport Container from \"./Container\";\n\nconst ErrorPage: React.FC = (props) => {\n  return (\n    <Container>\n      <Row>\n        <Column colSize={1}>\n          <div id=\"notfound\">\n            <div className=\"notfound\">\n              <div className=\"notfound-404\">\n                <h1>404</h1>\n              </div>\n              <h2>Oops! This Page Could Not Be Found</h2>\n              <p>\n                Sorry but the page you are looking for does not exist, have been\n                removed. name changed or is temporarily unavailable\n              </p>\n              <a href=\"/\">Go To Homepage</a>\n            </div>\n          </div>\n        </Column>\n      </Row>\n    </Container>\n  );\n};\nexport default ErrorPage;\n","import React, { SyntheticEvent } from \"react\";\n\ninterface CheckoutProps {}\ninterface CheckoutState {\n  name: string;\n}\n\nclass Checkout extends React.Component<CheckoutProps, CheckoutState> {\n  state = { name: \"\" };\n  emailRef: React.RefObject<HTMLInputElement>;\n\n  constructor(props: any) {\n    super(props); // base class constructor\n    this.emailRef = React.createRef();\n  }\n\n  submitData(event: SyntheticEvent) {\n    event.preventDefault(); // cancel the event behaviour\n    console.log(\"submit called\", this.state, this.emailRef.current?.value); // ? : null coalesce operator\n  }\n  render() {\n    return (\n      <form onSubmit={(event) => this.submitData(event)}>\n        <label>Name</label>\n        {/* CONTROLLED COMPONENT */}\n        <input\n          type=\"text\"\n          value={this.state.name}\n          onChange={(event) =>\n            this.setState({ name: event.currentTarget.value })\n          }\n        />\n        <label>Email</label>\n        {/* UNCONTROLLED COMPONENT */}\n        <input type=\"text\" ref={this.emailRef} />\n        <button>Submit</button>\n      </form>\n    );\n  }\n}\nexport default Checkout;\n","import React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { StoreModel } from \"../store/reducers\";\n\ninterface PrivateRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({\n  component,\n  isAuthenticated,\n  ...rest\n}) => {\n  const LoadComponent: React.ComponentClass = component as React.ComponentClass;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          <LoadComponent />\n        ) : (\n          <Redirect to={`/login?returnUrl=${location.pathname}`} />\n        )\n      }\n    />\n  );\n};\nconst mapStateToProps = (state: StoreModel) => {\n  return {\n    isAuthenticated: !!state.userSession.user,\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","//CartItem.js\nimport React from \"react\";\nimport ImageWithFallback from \"./ImageWithFallback\";\n\nfunction CartItem(props: any) {\n  const { item, code, remove } = props;\n  let [qty, updateQty] = React.useState(item.productQty);\n  return (\n    <tr>\n      <td>\n        <ImageWithFallback source={item.productImage} />\n      </td>\n      <td>{item.productName}</td>\n      <td>\n        {code} {Number(item.productPrice).toFixed(2)}\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          value={qty}\n          min=\"1\"\n          className=\"form-control col-md-3\"\n          onChange={(e) => {\n            const q = e.currentTarget.valueAsNumber;\n            updateQty(q);\n            item.productQty = q;\n          }}\n        />\n      </td>\n      <td>\n        {code} {(qty * item.productPrice).toFixed(2)}\n      </td>\n      <td>\n        <button\n          onClick={() => remove()}\n          className=\"btn btn-sm btn-danger rounded-circle\"\n          title=\"Delete\"\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>\n      </td>\n    </tr>\n  );\n}\nexport default CartItem;\n","import React from \"react\";\nimport CartItem from \"../components/CartItem\";\nimport { sumBy } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { cartActions } from \"../store/actions/cart.actions\";\nimport Container from \"../components/Container\";\n\ninterface CartProps {\n  cartItems: any[];\n  currencyCode: string;\n  removeItem: (id: number) => void;\n}\n\nclass Cart extends React.Component<CartProps> {\n  renderEmptyCart() {\n    return (\n      <div className=\"alert alert-info d-flex justify-content-between\">\n        Your shopping cart is empty\n        <Link to=\"/products\" className=\"btn btn-sm btn-outline-info\">\n          Continue Shopping\n        </Link>\n      </div>\n    );\n  }\n  renderTable() {\n    return (\n      <table className=\"table table-light\">\n        {this.renderTableHeader()}\n        {this.renderTableBody()}\n        {this.renderTableFooter()}\n      </table>\n    );\n  }\n  renderTableBody() {\n    return (\n      <tbody>\n        {this.props.cartItems.map((item) => (\n          <CartItem\n            item={item}\n            key={item.productId}\n            code={this.props.currencyCode}\n            remove={() => this.props.removeItem(item.productId)}\n          />\n        ))}\n      </tbody>\n    );\n  }\n  renderTableHeader() {\n    const columns = [\"\", \"Name\", \"Price\", \"Qty\", \"Total\", \"\"];\n    return (\n      <thead>\n        <tr className=\"thead-light\">\n          {columns.map((v, i) => (\n            <th key={i}>{v}</th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n  renderTableFooter() {\n    const { currencyCode, cartItems } = this.props;\n    return (\n      <tfoot>\n        <tr className=\"thead-light\">\n          <td>\n            <Link to=\"/products\" className=\"btn btn-sm btn-info\">\n              <i className=\"fas fa-chevron-left\"></i> Continue Shopping\n            </Link>\n          </td>\n          <td>\n            <strong>Total</strong>\n          </td>\n          <td colSpan={3}>\n            <strong>\n              {currencyCode}{\" \"}\n              {sumBy(\n                cartItems,\n                (v: any) => v.productQty * v.productPrice\n              ).toFixed(2)}\n            </strong>\n          </td>\n          <td colSpan={1}>\n            <Link\n              className=\"btn btn-sm btn-warning text-white\"\n              to=\"/checkout/1\"\n            >\n              Checkout <i className=\"fas fa-chevron-right\"></i>\n            </Link>\n          </td>\n        </tr>\n      </tfoot>\n    );\n  }\n  render() {\n    const { cartItems } = this.props;\n    return (\n      <Container>\n        {cartItems && cartItems.length > 0\n          ? this.renderTable()\n          : this.renderEmptyCart()}\n      </Container>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    removeItem: (id: number) => dispatch(cartActions.removeItem(id)),\n  };\n};\nconst mapStateToProps = (state: any) => {\n  return {\n    currencyCode: state.currency,\n    cartItems: state.cart,\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import Axios from \"axios\";\n\nexport const userActionTypes = {\n  SIGN_IN: \"[User] Sign In\",\n  SIGN_OUT: \"[User] Sign Out\",\n  SIGN_IN_SUCCESS: \"[User] Sign In Success\",\n  SIGN_IN_ERROR: \"[User] Sign In Error\",\n};\n\nconst loginSuccess = (user: object) => {\n  return { type: userActionTypes.SIGN_IN_SUCCESS, user };\n};\n\nconst loginError = (error: object) => {\n  return { type: userActionTypes.SIGN_IN_ERROR, error };\n};\n\nconst logout = () => {\n  return { type: userActionTypes.SIGN_OUT };\n};\n\nconst login = (email: string, password: string) => {\n  return { type: userActionTypes.SIGN_IN, email, password };\n};\n\n// const login = (email: string, password: string) => {\n//   Axios.post(\"\", { email, password })\n//     .then((res) => {\n//       dispatch(loginSuccess(res.data));\n//     })\n//     .catch((err) => {\n//       dispatch(loginError(err));\n//     });\n// };\n\nexport const userActions = { login, loginSuccess, loginError, logout };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { StoreModel } from \"../store/reducers\";\n\nconst LoadingSpinner: React.FC<{ isLoading: boolean }> = (props) => {\n  if (props.isLoading) {\n    return (\n      <div className=\"spinner-border text-primary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  }\n  return null;\n};\nconst mapStateToProps = (state: StoreModel) => {\n  return { isLoading: state.loading };\n};\nexport default connect(mapStateToProps)(LoadingSpinner);\n","import React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nconst withLoader = (WrappedComponent) => {\n  class WithLoadingScreen extends React.Component {\n    render() {\n      return (\n        <React.Fragment>\n          <LoadingSpinner />\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n  hoistNonReactStatics(WithLoadingScreen, WrappedComponent);\n  return WithLoadingScreen;\n};\nexport default withLoader;\n","import React, { SyntheticEvent } from \"react\";\nimport Column from \"../components/Column\";\nimport { connect } from \"react-redux\";\nimport { StoreModel } from \"../store/reducers\";\nimport { Dispatch, compose } from \"redux\";\nimport { userActions } from \"../store/actions/user.actions\";\nimport { Redirect, RouteChildrenProps } from \"react-router-dom\";\nimport qs from \"querystring\";\nimport withLoader from \"../HOC/LoaderHOC\";\n\ninterface LoginProps extends RouteChildrenProps {\n  login: (email: string, password: string) => void;\n  isLoggedIn: boolean;\n}\ninterface LoginState {\n  email: string;\n  password: string;\n}\nclass Login extends React.Component<LoginProps, LoginState> {\n  state = { email: \"\", password: \"\" };\n\n  doLogin(e: SyntheticEvent) {\n    e.preventDefault();\n    const { email, password } = this.state;\n    this.props.login(email, password);\n  }\n\n  render() {\n    if (this.props.isLoggedIn) {\n      const param = this.props.location.search\n        ? this.props.location.search\n        : \"\";\n      let lastPage: any = qs.parse(param);\n      lastPage = lastPage[\"?returnUrl\"] ? lastPage[\"?returnUrl\"] : \"/\";\n      return <Redirect to={lastPage} />;\n    }\n    return (\n      <div className=\"row\">\n        <Column colSize={3}>\n          <form\n            className=\"bg-light border rounded p-4\"\n            onSubmit={(e) => this.doLogin(e)}\n          >\n            <div className=\"form-group\">\n              <label>Email</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                onChange={(e) =>\n                  this.setState({ email: e.currentTarget.value })\n                }\n                value={this.state.email}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                onChange={(e) =>\n                  this.setState({ password: e.currentTarget.value })\n                }\n                value={this.state.password}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-success btn-block\">\n              Login\n            </button>\n          </form>\n        </Column>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state: StoreModel) => {\n  return {\n    isLoggedIn: !!state.userSession.user,\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    login: (email: string, password: string) =>\n      dispatch(userActions.login(email, password)),\n  };\n};\nexport default compose(\n  withLoader,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Login);\n\n// export default withLoader(Login);\n\n// Login\n\n// HOC 1 (login) : features of HOC 1\n// compose (HOC1,HOC2)(Logic) : HOC 1+ HOC 2\n\n// Login (updated) : isLoggedIn, isLoading\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Demo from \"./Demo\";\n// import ProductList from \"./containers/ProductList\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport Checkout from \"./containers/Checkout\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Cart from \"./containers/Cart\";\nimport Login from \"./containers/Login\";\n\nconst LazyProductList = React.lazy(() => import(\"./containers/ProductList\"));\n\ninterface AppRouterProps {}\n\nconst AppRouter: React.FC<AppRouterProps> = (props) => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route path=\"/\" component={Demo} exact={true} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/demo\" component={Demo} />\n        <Route path=\"/cart\" component={Cart} />\n        <Route path=\"/products\" component={LazyProductList} />\n        <PrivateRoute path=\"/checkout/:transId\" component={Checkout} />\n        <Route component={ErrorPage} />\n      </Switch>\n    </React.Suspense>\n  );\n};\nexport default AppRouter;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { MenuModel } from \"../models/menu.model\";\n\ninterface MenuProps {\n  menuList: MenuModel[];\n}\nconst Menu: React.FC<MenuProps> = (props) => {\n  return (\n    <ul className=\"navbar-nav mr-auto\">\n      {props.menuList.map((value) => (\n        <li className=\"nav-item\" key={value.menuLabel}>\n          <NavLink\n            className=\"nav-link\"\n            to={value.menuLink}\n            exact\n            activeClassName=\"active\"\n          >\n            {value.menuLabel}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default Menu;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport Menu from \"../components/Menu\";\nimport { ThemeContext } from \"../context\";\nimport { Link } from \"react-router-dom\";\n\nclass Header extends React.Component {\n  static contextType = ThemeContext;\n\n  state = { menuList: [] };\n\n  componentDidMount() {\n    this.getMenuData();\n  }\n\n  getMenuData() {\n    Axios.get(\"/menu.json\")\n      .then((res) => {\n        this.setState({ menuList: res.data });\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n  }\n\n  render() {\n    const theme = this.context\n      ? \"navbar-dark bg-dark shadow-sm\"\n      : \"navbar-light bg-light shadow-sm\";\n    return (\n      <nav className={\"navbar navbar-expand-lg \" + theme}>\n        <Link to=\"/\" className=\"navbar-brand\">\n          <i\n            className=\"fab fa-pied-piper-alt fa-2x\"\n            style={{ transform: \"rotateY(180deg)\" }}\n          ></i>\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <Menu menuList={this.state.menuList} />\n          <div className=\"d-flex align-items-center\">{this.props.children}</div>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Header;\n","import React from \"react\";\nimport { ThemeContext } from \"../context\";\n\nfunction Footer() {\n  const theme = React.useContext(ThemeContext);\n  const cls = !theme\n    ? \"footer mt-auto py-3 border-top shadow-sm\"\n    : \"footer mt-auto py-3 bg-dark text-white shadow-sm\";\n  return (\n    <footer className={cls}>\n      <div className=\"container d-flex align-items-center\">\n        <i className=\"fab fa-grav fa-2x mr-4\"></i>\n        <span>&copy; {new Date().getFullYear()}- My APP </span>\n      </div>\n    </footer>\n  );\n}\nexport default Footer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction CartIcon(props: any) {\n  const { count } = props;\n  return (\n    <Link to=\"/cart\">\n      <div id=\"ex3\">\n        <span className=\"p1 fa-stack has-badge\" data-count={count}>\n          <i className=\"p2 fa fa-circle fa-stack-2x text-primary\"></i>\n          <i\n            className=\"p3 fa fa-shopping-cart fa-stack-1x fa-inverse\"\n            data-count={count}\n          ></i>\n        </span>\n      </div>\n    </Link>\n  );\n}\nconst mapStateToProps = (state: any) => {\n  return { count: state.cart.length };\n};\nexport default connect(mapStateToProps)(CartIcon);\n","import React from \"react\";\n// import ProductList from \"./containers/ProductList\";\nimport Currency from \"./components/Currency\";\nimport ThemeSwitch from \"./components/ThemeSwitch\";\nimport { ThemeContext } from \"./context\";\nimport AppRouter from \"./AppRouter\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"./containers/Header\";\nimport Footer from \"./components/Footer\";\nimport CartIcon from \"./components/CartIcon\";\n\ninterface AppState {\n  currencyCode: string;\n  darkMode: boolean;\n}\ninterface AppProps {}\n\nclass App extends React.Component<AppProps, AppState> {\n  state = {\n    currencyCode: \"INR\",\n    darkMode: false,\n  };\n\n  render() {\n    let { darkMode } = this.state;\n    return (\n      <BrowserRouter>\n        <ThemeContext.Provider value={darkMode}>\n          <Header>\n            <ThemeSwitch\n              changeTheme={(theme) => this.setState({ darkMode: theme })}\n            />\n            <Currency />\n            <CartIcon />\n          </Header>\n          <AppRouter />\n          {/* <ProductList selectedCode={currencyCode} /> */}\n          <Footer />\n        </ThemeContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Action } from \"redux\";\nimport { currencyTypes } from \"../actions/currency.actions\";\n\ninterface CurrencyActionType extends Action {\n  code: string;\n}\n\nfunction currencyReducer(state = \"INR\", action: CurrencyActionType) {\n  switch (action.type) {\n    case currencyTypes.CHANGE_CURRENCY:\n      return action.code;\n    default:\n      return state; // current state in store\n  }\n}\nexport default currencyReducer;\n","import { Action } from \"redux\";\nimport { cartActionTypes } from \"../actions/cart.actions\";\nimport { ProductModel } from \"../../models/product.model\";\n\ninterface CartActionType extends Action {\n  product?: any;\n  id?: number;\n}\n// state : initialize, immutable\nfunction cartReduer(state: any[] = [], action: CartActionType) {\n  switch (action.type) {\n    case cartActionTypes.ADD_TO_CART:\n      return [...state, { ...action.product, productQty: 1 }];\n    case cartActionTypes.REMOVE_FROM_CART:\n      return state.filter((p) => p.productId !== action.id);\n    default:\n      return state;\n  }\n}\n\nexport default cartReduer;\n","import { Action } from \"redux\";\nimport { userActionTypes } from \"../actions/user.actions\";\n\ninterface UserAction extends Action {\n  user?: object;\n  error?: object;\n}\n\nconst initialState = {\n  user: null,\n  error: null,\n};\n\nfunction userReducer(state = initialState, action: UserAction) {\n  switch (action.type) {\n    case userActionTypes.SIGN_IN_SUCCESS:\n      return { user: action.user, error: null };\n    case userActionTypes.SIGN_IN_ERROR:\n      return { user: null, error: action.error };\n    case userActionTypes.SIGN_OUT:\n      return { ...initialState };\n    default:\n      return state;\n  }\n}\nexport default userReducer;\n","export const commonActionTypes = {\n  SET_LOADING: \"[Common] Set Loading\",\n};\n\nconst setLoading = (status: boolean) => {\n  return { type: commonActionTypes.SET_LOADING, status };\n};\nexport const commonActions = { setLoading };\n","import { Action } from \"redux\";\nimport { commonActionTypes } from \"../actions/common.actions\";\n\ninterface CommonAction extends Action {\n  status: boolean;\n}\nfunction commonReducer(state = false, action: CommonAction) {\n  switch (action.type) {\n    case commonActionTypes.SET_LOADING:\n      return action.status;\n    default:\n      return state;\n  }\n}\nexport default commonReducer;\n","import { combineReducers } from \"redux\";\nimport currencyReducer from \"./currency.reducer\";\nimport cartReduer from \"./cart.reducer\";\nimport { ProductModel } from \"../../models/product.model\";\nimport userReducer from \"./user.reducer\";\nimport commonReducer from \"./common.reducer\";\n\nexport interface StoreModel {\n  currency: string;\n  cart: ProductModel[];\n  userSession: { user: object; error: object };\n  loading: boolean;\n}\n\nconst rootReducer = combineReducers({\n  currency: currencyReducer,\n  cart: cartReduer,\n  userSession: userReducer,\n  loading: commonReducer,\n});\n\nexport default rootReducer;\n","import { put, takeEvery } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { userActions, userActionTypes } from \"../actions/user.actions\";\nimport { commonActions } from \"../actions/common.actions\";\n// ES6 generator functions\nexport function* authSaga(action: any) {\n  const url =\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAtmiEc1CaYH9NziL7NwGgLT_jp92VdvjU\";\n  const data = {\n    email: action.email,\n    password: action.password,\n    returnSecureToken: true,\n  };\n  try {\n    yield put(commonActions.setLoading(true));\n    const response = yield Axios.post(url, data);\n    yield put(userActions.loginSuccess(response.data)); // dispatching an action\n    yield put(commonActions.setLoading(false));\n  } catch (e) {\n    yield put(userActions.loginError(e.response.data.error.message));\n    yield put(commonActions.setLoading(false));\n  }\n}\n\nexport function* watchAuth() {\n  yield takeEvery(userActionTypes.SIGN_IN, authSaga);\n}\n","import { all } from \"redux-saga/effects\";\nimport { watchAuth } from \"./auth-saga\";\n\n// monitor all sagas of the application\nexport default function* rootSaga() {\n  yield all([watchAuth()]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst appStore = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga); // running the saga middleware\n\nexport default appStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport appStore from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}